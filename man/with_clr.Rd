% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{with_clr}
\alias{with_clr}
\title{Create HTML span tag with text and color style}
\usage{
with_clr(text, color = "black", alpha = 1, ...)
}
\arguments{
\item{text}{\emph{character}, text that will be colored.}

\item{color}{\emph{character}, color applied to the text, defaults to black.}

\item{alpha}{\emph{numeric}, opacity in interval 0--1, where 1 is no transparency,
i.e. full opacity}

\item{...}{
  Arguments passed on to \code{\link[htmltools:builder]{htmltools::span}}
  \describe{
    \item{\code{.noWS}}{Character vector used to omit some of the whitespace that would
normally be written around this tag. Valid options include \code{before},
\code{after}, \code{outside}, \code{after-begin}, and \code{before-end}.
Any number of these options can be specified.}
    \item{\code{.renderHook}}{A function (or list of functions) to call when the \code{tag} is rendered. This
function should have at least one argument (the \code{tag}) and return anything
that can be converted into tags via \code{\link[htmltools:as.tags]{as.tags()}}. Additional hooks may also be
added to a particular \code{tag} via \code{\link[htmltools:tagAddRenderHook]{tagAddRenderHook()}}.}
  }}
}
\value{
an object of class \code{shiny.tag}, coercible to character
}
\description{
Create HTML span tag with text and color style
}
\examples{
html <- paste0(
  with_clr("Red", "red"), ", ",
  with_clr("green", "green"),
  " and ",
  with_clr("blue", "blue"),
  " are the basic colors."
  )

library(ggplot2)

ggplot() +
  geom_richtext(aes(x = 1, y = 1, label = html), size = 8) +
  theme_void()
}
