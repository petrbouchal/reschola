% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{recover_labs}
\alias{recover_labs}
\alias{`\%labs_from\%`}
\alias{\%labs_from\%}
\title{Recover lost labels from same-structured tibble with labels}
\usage{
recover_labs(new_data, orig_data)

new_data \%labs_from\% orig_data
}
\arguments{
\item{new_data}{new dataframe that you want to recover the labs for}

\item{orig_data}{original dataframe with variable labels present}
}
\value{

}
\description{
Many operations, such as \link{rbind}, \link{cbind} or its tidyverse analogues, strips
out the variable labels. Use \code{recover_labs()} to bring them back from a
\code{tibble} or \code{data.frame} where they are last present. The function attempts a
few checks for new and original data compatibility. Note that the infix
operator is available for a quick and self-explanatory usage.
}
\examples{
# make labels for iris dataset, labels will be colnames
# with dot replaced for whitespace
iris_with_labs <- as.data.frame(mapply(function(x, y) {
  attr(x, "label") <- y
  return(x)
}, iris, gsub("\\\\.", " ", colnames(iris)), SIMPLIFY = FALSE))

iris_with_recovered_labs <- recover_labs(iris, iris_with_labs)
iris_with_recovered_labs_infix <- iris \%labs_from\% iris_with_labs

# check
get_labs_df(iris_with_recovered_labs)
get_labs_df(iris_with_recovered_labs_infix)

}
